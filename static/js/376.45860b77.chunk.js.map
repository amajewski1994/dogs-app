{"version":3,"file":"static/js/376.45860b77.chunk.js","mappings":"iKAKA,MA2EA,EA3EgBA,KAEd,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,GAChC,CACEC,KAAM,CACJC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,MAAO,CACLH,MAAO,GACPC,SAAS,GAEXG,SAAU,CACRJ,MAAO,GACPC,SAAS,GAEXI,SAAU,CACRL,MAAO,GACPC,SAAS,GAEXK,OAAQ,CACNN,MAAO,GACPC,SAAS,KAGb,GAGIM,EAAeC,IACnB,MAAMC,EAAKD,EAAEE,OAAOD,GACdT,EAAQQ,EAAEE,OAAOV,MACvB,IAAIC,GAAU,IACVO,EAAEE,OAAOV,MAAMW,QAAQ,MAAO,KAAOH,EAAEE,OAAOV,MAAMY,QAAU,KAChEX,GAAU,GAEZJ,EAAaY,EAAIT,EAAOC,EAAQ,EAGlC,OACEY,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAYC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,OAAMF,SAAC,UACtBC,EAAAA,EAAAA,KAAA,SAAOP,GAAG,OAAOS,SAAUX,QAE7BM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SAAOP,GAAG,QAAQU,KAAK,SAASD,SAAUX,QAE5CM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SAAOP,GAAG,WAAWS,SAAUX,QAEjCM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SAAOP,GAAG,WAAWU,KAAK,SAASD,SAAUX,QAE/CM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAaF,SAAC,iBAC7BC,EAAAA,EAAAA,KAAA,YAAUP,GAAG,cAAcS,SAAUX,QAEvCM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,SAAQF,SAAC,YACxBC,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CAACC,QAAQ,SAASH,SAAUrB,QAE1CmB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,UAAW3B,EAAUK,QAAQc,SAAC,gBAErC,C,gHCpEX,MAAMS,EAAiB,CACnB,CACIf,GAAI,EACJV,KAAM,gBACNG,YAAa,wRACbC,MAAO,GACPE,SAAU,EACVoB,YAAa,EACbnB,OAAQ,KACRF,SAAU,QAEd,CACIK,GAAI,EACJV,KAAM,kBACNG,YAAa,wRACbC,MAAO,GACPE,SAAU,EACVoB,YAAa,EACbnB,OAAQ,KACRF,SAAU,SAEd,CACIK,GAAI,EACJV,KAAM,iBACNG,YAAa,wRACbC,MAAO,GACPE,SAAU,EACVoB,YAAa,EACbnB,OAAQ,KACRF,SAAU,UAIZsB,EAAuB,CAAC,OAAQ,OAAQ,SA0K9C,EAxKcC,KAEV,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAASN,IAClCO,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,MACxCK,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,KAC9CO,EAAmBC,IAAwBR,EAAAA,EAAAA,WAAS,IAEpDS,EAAOC,IAAYV,EAAAA,EAAAA,WAAS,IAE5BW,EAAgBC,IAAqBZ,EAAAA,EAAAA,WAAS,IAE9Ca,EAAYC,IAAiBd,EAAAA,EAAAA,UAAS,CAC3Ce,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,eAGnBC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAeA,KACjBP,EAAc,CACVC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,aACjB,EAMN,OAHAE,IACAL,OAAOM,iBAAiB,SAAUD,GAE3B,KACHL,OAAOO,oBAAoB,SAAUF,EAAa,CACrD,GACF,IAED,MAAMG,EAAe1B,EAAS2B,KAAI,CAACC,EAAS/C,KACjCI,EAAAA,EAAAA,MAAA,MAAaC,UAAU,qCAAoCC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UAC/BC,EAAAA,EAAAA,KAAA,OAAKyC,IAAKC,EAAUC,IAAI,iBAE5B9C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAC7ByC,EAAQzD,QAEbiB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UAC/BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACKyC,EAAQrD,MAAM,cAI3Ba,EAAAA,EAAAA,KAAC4C,EAAAA,GAAI,CAACC,GAAIL,EAAQzD,KAAKgB,UACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAChCC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAAAP,SAAC,qBAhBAN,MAsBpByC,EAAAA,EAAAA,YAAU,KACN,MAAMY,EAAY,IAAItC,GACtBuC,EAAeD,EAAU,GAC1B,CAAC/B,EAAYE,EAAaE,EAAgBE,IAE7C,MAAM0B,EAAkBD,IACpB,MAAME,EAAmBF,EAAUG,QAAOT,GAC/BA,EAAQzD,KAAKmE,cAAcC,SAASpC,EAAWmC,gBAClDV,EAAQrD,OAASiE,SAASnC,IAC1BuB,EAAQpD,SAAS8D,cAAcC,SAAShC,EAAe+B,gBACvDV,EAAQ/B,aAAeY,EAAoB,GAAK,KAGxDR,EAAYmC,EAAiB,EAI3BzD,EAAeC,IACjB,MAAMC,EAAKD,EAAEE,OAAOD,GACdT,EAAQQ,EAAEE,OAAOV,MAUvB,GATW,eAAPS,GACAuB,EAAchC,GAEP,gBAAPS,GACAyB,EAAelC,GAER,oBAAPS,GACA2B,EAAkBpC,GAEX,uBAAPS,EAA6B,CAC7B,MAAM4D,EAAU7D,EAAEE,OAAO2D,QACzB/B,EAAqB+B,EACzB,GAWEC,EAA2BA,KAC7B5B,GAAkB6B,IAAcA,GAAU,EAG9C,OACI1D,EAAAA,EAAAA,MAAA2D,EAAAA,SAAA,CAAAzD,SAAA,EACAC,EAAAA,EAAAA,KAACyD,EAAAA,EAAK,CACNC,KAAMnC,EACNoC,SAhBcC,KACdpC,GAAS,EAAM,EAgBfqC,OAAQ,WACR9D,UAAUC,EAAAA,EAAAA,KAACrB,EAAAA,EAAO,OAGlBkB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAEhCF,EAAAA,EAAAA,MAAA,OAAKC,UAAS,aAAAgE,OAAerC,GAAkB,kBAAmB1B,SAAA,CAC7D4B,EAAWE,OAAS,MACzB7B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC5BC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACR,UAAU,+BAA+BiE,QAASA,KAAOT,GAA0B,EAAEvD,SAAC,aAGlGC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACAF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,aAAYF,SAAC,UAC5BC,EAAAA,EAAAA,KAAA,SAAOP,GAAG,aAAaU,KAAK,OAAOD,SAAUX,EAAaP,MAAO+B,EAAYiD,YAAY,oBAG7FnE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,kBAAiBF,SAAC,cACjCF,EAAAA,EAAAA,MAAA,UAAQK,SAAUX,EAAaE,GAAG,kBAAkBK,UAAS,GAAAgE,OAAK3C,GAAkB,gBAAiBpB,SAAA,EACjGC,EAAAA,EAAAA,KAAA,UAAQhB,MAAM,GAAEe,SAAC,yBAChBW,EAAqB6B,KAAI,CAACnD,EAAUK,KAC1BO,EAAAA,EAAAA,KAAA,UAAiBhB,MAAOI,EAASW,SACnCX,EAAS6E,OAAO,GAAGf,cAAgB9D,EAAS8E,MAAM,IADnCzE,YAOhCI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,aAAYF,SAAC,WACxBC,EAAAA,EAAAA,KAAA,SAAOP,GAAG,cAAcU,KAAK,QAAQD,SAAUX,EAAaP,MAAOiC,EAAakD,KAAM,MACtFtE,EAAAA,EAAAA,MAAA,QAAMJ,GAAG,oBAAmBM,SAAA,CAAEkB,EAAY,WAG9CpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,qBAAoBF,SAAC,oBACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC7BC,EAAAA,EAAAA,KAAA,SAAOP,GAAG,qBAAqBK,UAAU,WAAWK,KAAK,WAAWD,SAAUX,EAAaP,MAAOqC,EAAmBgC,QAAShC,aAI1IxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,CACjC4B,EAAWE,OAAS,MACjB7B,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACR,UAAU,+BAA+BiE,QAASA,KAAOT,GAA0B,EAAEvD,SAAC,aAElGC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACR,UAAU,+BAA+BiE,QAASA,KA5D9DvC,GAAS,EA4DkF,EAAAzB,SAAC,gBAExFC,EAAAA,EAAAA,KAAA,MAAAD,SAEKa,GAAYA,EAAShB,OAAS,EAAI0C,GAAetC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBAI3D,C,6CC7MX,MAAMqE,EAAcA,CAACC,EAAOC,KAC1B,OAAQA,EAAOnE,MACb,IAAK,eACH,IAAIoE,GAAc,EAClB,IAAK,MAAMlE,KAAWgE,EAAMG,OACrBH,EAAMG,OAAOnE,KAIhBkE,EADElE,IAAYiE,EAAOjE,QACPkE,GAAeD,EAAOrF,QAEtBsF,GAAeF,EAAMG,OAAOnE,GAASpB,SAIvD,MAAO,IACFoF,EACHG,OAAQ,IACHH,EAAMG,OACT,CAACF,EAAOjE,SAAU,CAAErB,MAAOsF,EAAOtF,MAAOC,QAASqF,EAAOrF,UAE3DA,QAASsF,GAEb,IAAK,WACH,MAAO,CACLC,OAAQF,EAAOE,OACfvF,QAASqF,EAAOC,aAEpB,QACE,OAAOF,EACX,EAGWvF,EAAUA,CAAC2F,EAAeC,KACrC,MAAO9F,EAAW+F,IAAYC,EAAAA,EAAAA,YAAWR,EAAa,CACpDI,OAAQC,EACRxF,QAASyF,IAoBX,MAAO,CAAC9F,GAjBaiG,EAAAA,EAAAA,cAAY,CAACpF,EAAIT,EAAOC,KAC3C0F,EAAS,CACPxE,KAAM,eACNnB,MAAOA,EACPC,QAASA,EACToB,QAASZ,GACT,GACD,IAU6B,C,oDCxDlC,MAMA,EANeqF,IAAqD,IAApD,SAAC/E,EAAQ,UAAED,EAAS,QAAEiE,EAAO,KAAEgB,EAAI,SAAExE,GAASuE,EAC5D,OACE9E,EAAAA,EAAAA,KAAA,OAAKF,UAAS,UAAAgE,OAAYhE,EAAS,KAAAgE,OAAIiB,GAAQ,UAAYA,EAAI,KAAAjB,OAAIvD,GAAY,YAAcwD,QAASA,EAAQhE,SAAGA,GAAe,C,oDCFpI,MAQA,EARc+E,IAA6C,IAA5C,IAAErC,EAAG,IAAEE,EAAG,UAAE7C,EAAS,KAAEiF,EAAI,QAAEhB,GAASe,EACnD,OACE9E,EAAAA,EAAAA,KAAA,OAAKF,UAAS,SAAAgE,OAAWhE,EAAS,WAAAgE,OAAUiB,GAAQhB,QAASA,GAAoB,KAAKhE,UAClFC,EAAAA,EAAAA,KAAA,OAAKyC,IAAKA,EAAKE,IAAKA,KAClB,C,iJCCV,MA6HA,EA7HoBmC,IAAuC,IAAtC,QAAEzE,EAAO,SAAEH,EAAQ,UAAE8E,GAAWF,EACnD,MAAOG,EAAMC,IAAWpE,EAAAA,EAAAA,WAAS,IAC1BqE,EAAaC,IAAkBtE,EAAAA,EAAAA,UAAS,KACxCuE,EAAYC,IAAiBxE,EAAAA,EAAAA,aAC7BxB,EAAQiG,IAAazE,EAAAA,EAAAA,UAAS,KAC9B0E,EAAOC,IAAY3E,EAAAA,EAAAA,aACnB7B,EAASyG,IAAc5E,EAAAA,EAAAA,WAAS,IAChC6E,EAAaC,IAAkB9E,EAAAA,EAAAA,WAAU,GAE1C+E,GAAgBC,EAAAA,EAAAA,WAEtB5D,EAAAA,EAAAA,YAAU,KACR,GAAG5C,EAAOM,QAAU,EAAG,OAAOM,EAASG,EAAS,IAAI,GACpDH,EAASG,EAASf,GAAQ,EAAK,GAC9B,CAACA,IAEJ,MAwDMyG,EAAazG,EAAOiD,KAAI,CAACiD,EAAO/F,KAC7BI,EAAAA,EAAAA,MAAA,MAEPmG,aAAcA,IAAMJ,EAAenG,GAAKwG,aAAcA,IAAML,GAAgB,GAAG7F,SAAA,EAE7EC,EAAAA,EAAAA,KAAA,QACAF,UAAS,GAAAgE,OAAK6B,IAAgBvC,SAAS3D,IAAO,UAC9CsE,QAASA,IAbQmC,KACnB,MACMC,EADU,IAAI7G,GACW2D,QAAOuC,GAASA,IAAUU,IACzDX,EAAUY,EAAe,EAURC,CAAYZ,GAAOzF,SACjC,OAGDC,EAAAA,EAAAA,KAACqG,EAAAA,EAAK,CACN5D,IAAK+C,GAAgBc,EACrB3D,IAAI,aACJoC,KAAK,eACLjF,UAAU,aAbPL,KAkBP,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEP,GAAIY,EACJkG,IAAKV,EACLW,MAAO,CAAEC,QAAS,QAClBtG,KAAK,OACLuG,OAAO,kBACPxG,SApFgByG,IAQpB,GAAGA,EAAMjH,OAAOkH,OAAuC,IAA9BD,EAAMjH,OAAOkH,MAAMhH,OAAc,CACxD,MAAMqF,EAAO0B,EAAMjH,OAAOkH,MAAM,GAC1BC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,KAClB,MAAMC,EAASH,EAAWG,OACX,WAAZ3G,EACDkF,GAAU0B,GAAc,IACnBA,EACHD,MAIFvB,EAASuB,GACT9G,EAASG,EAAS2G,GAAQ,GAC5B,EAEFH,EAAWK,cAAcjC,EAI3B,MA2DEpF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAE3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,CAGvB,WAAZM,EACDf,EAAOM,OAAS,GAAII,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2BAA0BC,SAAEgG,KACzD/F,EAAAA,EAAAA,KAACqG,EAAAA,EAAK,CAAC5D,IAAK6D,EAAW3D,IAAI,aAAaoC,KAAK,eAAejF,UAAU,YAE3EE,EAAAA,EAAAA,KAACqG,EAAAA,EAAK,CAAC5D,IAAK+C,GAAgBc,EAAW3D,IAAI,aAAaoC,KAAK,eAAejF,UAAU,WAEzE,WAAZO,GAAwBf,EAAOM,OAAS,IAAKI,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BAA6ByF,IAASxF,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BAE5FC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACH,KAAK,SAAS4D,QAtDHoD,KACvBtB,EAAcuB,QAAQC,OAAO,EAqDwBtC,KAAK,QAAOhF,SAAC,mBAI9Dd,IAAWe,EAAAA,EAAAA,KAAA,KAAAD,SAAIiF,MACb,C,wEC7HV,MAOA,EAPiBsC,GACRC,EAAAA,cACLvH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAWiE,QAASuD,EAAMvD,UACzCyD,SAASC,eAAe,kBCAtBC,EAAeJ,IACnB,MAAMK,GACJ9H,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAAgE,OAAWwD,EAAMxH,WAAa0G,MAAOc,EAAMd,MAAMzG,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UAAQF,UAAS,iBAAAgE,OAAmBwD,EAAMM,aAAc7H,UACtDC,EAAAA,EAAAA,KAAA,MAAAD,SAAKuH,EAAMzD,YAEX7D,EAAAA,EAAAA,KAAA,OAAKF,UAAS,kBAAAgE,OAAoBwD,EAAMO,cAAe9H,SACpDuH,EAAMvH,cAIf,OAAOwH,EAAAA,aAAsBI,EAASH,SAASC,eAAe,cAAc,EAoB9E,EAjBcH,IAEVzH,EAAAA,EAAAA,MAACiI,EAAAA,SAAc,CAAA/H,SAAA,CACZuH,EAAM5D,OAAQ1D,EAAAA,EAAAA,KAAC+H,EAAQ,CAAChE,QAASuD,EAAM3D,YACxC3D,EAAAA,EAAAA,KAACgI,EAAAA,EAAa,CACZC,GAAIX,EAAM5D,KACVwE,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAOtI,UAElBC,EAAAA,EAAAA,KAAC0H,EAAY,IAAKJ,Q","sources":["components/Store/NewItem.js","components/Store/Store.js","hooks/form-hook.js","shared/Button.js","shared/Image.js","shared/ImageUpload.js","shared/Backdrop.js","shared/Modal.js"],"sourcesContent":["import React from 'react'\r\nimport Button from '../../shared/Button'\r\nimport ImageUpload from '../../shared/ImageUpload'\r\nimport { useForm } from '../../hooks/form-hook'\r\n\r\nconst NewItem = () => {\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      name: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      price: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      category: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      quantity: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      images: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const inputChange = (e) => {\r\n    const id = e.target.id\r\n    const value = e.target.value\r\n    let isValid = true\r\n    if(!e.target.value.replace(/\\s/g, '') || e.target.value.length <= 0) {\r\n      isValid = false\r\n    }\r\n    inputHandler(id, value, isValid)\r\n  }\r\n\r\n  return (\r\n    <form className='modal-form'>\r\n        <div className='modal-form-name'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input id='name' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-price'>\r\n          <label htmlFor='price'>Price</label>\r\n          <input id='price' type='number' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-category'>\r\n          <label htmlFor='category'>Category</label>\r\n          <input id='category' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-quantity'>\r\n          <label htmlFor='quantity'>Quantity</label>\r\n          <input id='quantity' type='number' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-description'>\r\n          <label htmlFor='description'>Description</label>\r\n          <textarea id='description' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-images'>\r\n          <label htmlFor='images'>Images</label>\r\n          <ImageUpload inputId='images' onChange={inputHandler} />\r\n        </div>\r\n        <div className='modal-form-button'>\r\n          <Button disabled={!formState.isValid}>ADD NEW</Button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NewItem;","import React, { useEffect, useState } from 'react'\r\nimport dogBlank from '../../images/blank_dog.png'\r\nimport Button from '../../shared/Button'\r\nimport Modal from '../../shared/Modal'\r\nimport NewItem from './NewItem'\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DUMMY_PRODUCTS = [\r\n    {\r\n        id: 0,\r\n        name: 'Karma dla psa',\r\n        description: 'Duis ac massa porttitor, egestas libero non, tincidunt libero. Aliquam at elementum neque. Sed risus tellus, tincidunt ac enim quis, malesuada commodo purus. Nam tincidunt laoreet erat, sed maximus lacus imperdiet a. Sed ultricies auctor velit, a pharetra nulla ultricies eget.',\r\n        price: 10,\r\n        quantity: 0,\r\n        maxQuantity: 0,\r\n        images: null,\r\n        category: 'food'\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Figurka Jamnika',\r\n        description: 'Duis ac massa porttitor, egestas libero non, tincidunt libero. Aliquam at elementum neque. Sed risus tellus, tincidunt ac enim quis, malesuada commodo purus. Nam tincidunt laoreet erat, sed maximus lacus imperdiet a. Sed ultricies auctor velit, a pharetra nulla ultricies eget.',\r\n        price: 20,\r\n        quantity: 0,\r\n        maxQuantity: 3,\r\n        images: null,\r\n        category: 'other'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Figurka Charta',\r\n        description: 'Duis ac massa porttitor, egestas libero non, tincidunt libero. Aliquam at elementum neque. Sed risus tellus, tincidunt ac enim quis, malesuada commodo purus. Nam tincidunt laoreet erat, sed maximus lacus imperdiet a. Sed ultricies auctor velit, a pharetra nulla ultricies eget.',\r\n        price: 40,\r\n        quantity: 0,\r\n        maxQuantity: 2,\r\n        images: null,\r\n        category: 'other'\r\n    },\r\n]\r\n\r\nconst AVAILABLE_CATEGORIES = ['food', 'toys', 'other']\r\n\r\nconst Store = () => {\r\n\r\n    const [products, setProducts] = useState(DUMMY_PRODUCTS)\r\n    const [searchName, setSearchName] = useState('')\r\n    const [searchPrice, setSearchPrice] = useState(100)\r\n    const [searchCategory, setSearchCategory] = useState('')\r\n    const [searchAvailabilty, setSearchAvailabilty] = useState(false)\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [filtersVisible, setFiltersVisible] = useState(false);\r\n\r\n    const [windowSize, setWindowSize] = useState({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n  });\r\n\r\n  useEffect(() => {\r\n      const handleResize = () => {\r\n          setWindowSize({\r\n              width: window.innerWidth,\r\n              height: window.innerHeight\r\n          });\r\n        };\r\n        \r\n      handleResize()\r\n      window.addEventListener('resize', handleResize);\r\n\r\n      return () => {\r\n          window.removeEventListener('resize', handleResize);\r\n      };\r\n  }, []);\r\n\r\n    const productsList = products.map((product, id) => {\r\n        return <li key={id} className='list-right__container product-cart'>\r\n            <div className='product-cart-image'>\r\n                <img src={dogBlank} alt='dog_blank' />\r\n            </div>\r\n            <div className='cart-info product-cart-info'>\r\n                <div className='product-cart-name'>\r\n                    {product.name}\r\n                </div>\r\n                <div className='product-cart-price'>\r\n                    <div>\r\n                        {product.price} $\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Link to={product.name}>\r\n            <div className='product-cart-button'>\r\n                <Button>GO TO ITEM</Button>\r\n            </div>\r\n            </Link>\r\n        </li>\r\n    })\r\n\r\n    useEffect(() => {\r\n        const _products = [...DUMMY_PRODUCTS]\r\n        filterProducts(_products)\r\n    }, [searchName, searchPrice, searchCategory, searchAvailabilty])\r\n\r\n    const filterProducts = (_products) => {\r\n        const filteredProducts = _products.filter(product => {\r\n            return product.name.toUpperCase().includes(searchName.toUpperCase()) &&\r\n                product.price <= parseInt(searchPrice) &&\r\n                product.category.toUpperCase().includes(searchCategory.toUpperCase()) &&\r\n                product.maxQuantity > (searchAvailabilty ? 0 : -1)\r\n        })\r\n\r\n        setProducts(filteredProducts)\r\n    }\r\n\r\n\r\n    const inputChange = (e) => {\r\n        const id = e.target.id\r\n        const value = e.target.value\r\n        if (id === 'input-name') {\r\n            setSearchName(value)\r\n        }\r\n        if (id === 'input-price') {\r\n            setSearchPrice(value)\r\n        }\r\n        if (id === 'category-select') {\r\n            setSearchCategory(value)\r\n        }\r\n        if (id === 'input-availability') {\r\n            const checked = e.target.checked\r\n            setSearchAvailabilty(checked)\r\n        }\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setModal(false)\r\n    }\r\n    \r\n      const showModal = () => {\r\n        setModal(true)\r\n    }\r\n\r\n    const filtersVisibilityHandler = () => {\r\n        setFiltersVisible(prevState => !prevState)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Modal\r\n        show={modal}\r\n        onCancel={hideModal}\r\n        header={'New Item'}\r\n        children={<NewItem />}\r\n      ></Modal>\r\n        \r\n        <div className='flex-container list'>\r\n            \r\n            <div className={`list-left ${filtersVisible && 'filters-active'}`}>\r\n                {windowSize.width <= 1000 &&\r\n            <div className='list-left-close'>\r\n                <Button className=\"button-primary button-shadow\" onClick={() => {filtersVisibilityHandler()}}>CLOSE</Button>\r\n            </div>\r\n            }\r\n            <h2>Filters</h2>\r\n                <div className='products-filters-name'>\r\n                    <label htmlFor='input-name'>Name</label>\r\n                    <input id='input-name' type='text' onChange={inputChange} value={searchName} placeholder='Search name' />\r\n                </div>\r\n\r\n                <div className='products-filters-category'>\r\n                    <label htmlFor=\"category-select\">Category</label>\r\n                    <select onChange={inputChange} id=\"category-select\" className={`${searchCategory && 'select-valid'}`}>\r\n                        <option value=\"\">--Choose an option--</option>\r\n                        {AVAILABLE_CATEGORIES.map((category, id) => {\r\n                            return <option key={id} value={category}>\r\n                                {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                            </option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='products-filters-price'>\r\n                <label htmlFor='input-name'>Price</label>\r\n                    <input id='input-price' type='range' onChange={inputChange} value={searchPrice} step={10} />\r\n                    <span id='input-price-value'>{searchPrice}$</span>\r\n                </div>\r\n                \r\n                <div className='products-filters-available'>\r\n                    <label htmlFor='input-availability'>Only available</label>\r\n                    <div className=\"checkbox-wrapper\">\r\n                        <input id='input-availability' className=\"checkbox\" type='checkBox' onChange={inputChange} value={searchAvailabilty} checked={searchAvailabilty} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='list-right'>\r\n            <div className='list-right-button'>\r\n            {windowSize.width <= 1000 &&\r\n                <Button className='button-primary button-shadow' onClick={() => {filtersVisibilityHandler()}}>FILTERS</Button>\r\n            }\r\n            <Button className='button-primary button-shadow' onClick={() => showModal(false, true)}>ADD NEW</Button>\r\n            </div>\r\n            <ul>\r\n            \r\n                {products && products.length > 0 ? productsList : <h2>No results</h2>}\r\n            </ul>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Store","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n        \n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  // const setFormData = useCallback((inputData, formValidity) => {\n  //   dispatch({\n  //     type: 'SET_DATA',\n  //     inputs: inputData,\n  //     formIsValid: formValidity\n  //   });\n  // }, []);\n\n  return [formState, inputHandler];\n  // return [formState, inputHandler, setFormData];\n};","import React from 'react'\r\n\r\nconst Button = ({children, className, onClick, size, disabled}) => {\r\n  return (\r\n    <div className={`button ${className} ${size && 'button-' + size} ${disabled && 'disabled'}`} onClick={onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst Image = ({ src, alt, className, size, onClick }) => {\r\n  return (\r\n    <div className={`image ${className} image-${size}`} onClick={onClick ? onClick : null}>\r\n        <img src={src} alt={alt} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image","import Button from './Button';\n\nimport React, { useRef, useState, useEffect } from 'react';\n\nimport userDummy from '../images/dummy_user_image.png'\nimport Image from './Image';\n\nconst ImageUpload = ({ inputId, onChange, errorText }) => {\n  const [file, setFile] = useState(false);\n  const [imagesValue, setImagesValue] = useState([]);\n  const [imageValue, setImageValue] = useState();\n  const [images, setImages] = useState([]);\n  const [image, setImage] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [activeImage, setActiveImage] = useState(-1);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if(images.length <= 0) return onChange(inputId, '', false);\n    onChange(inputId, images, true)\n  }, [images]);\n\n  const pickedHandler = event => {\n    // let pickedFile;\n    // let newImagesValue\n    // let fileIsValid = isValid;\n    // setImagesValue([\n    //   ...imagesValue,\n    //   event.target.files[0]\n    // ]);\n    if(event.target.files && event.target.files.length === 1) {\n      const file = event.target.files[0]\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const result = fileReader.result\n        if(inputId === 'images') {\n          setImages(prevImages => [\n            ...prevImages,\n            result\n          ]);\n\n        } else {\n          setImage(result);\n          onChange(inputId, result, true)\n        }\n      }\n      fileReader.readAsDataURL(file);\n      // fileReader.readAsDataURL(file);\n      // setImageValue(event.target.files[0])\n      // setIsValid(true)\n    }\n\n    // if (event.target.files && event.target.files.length === 1) {\n    //   pickedFile = event.target.files[0];\n    //   setFile(pickedFile);\n    //   newImagesValue = [\n      //     ...imagesValue,\n      //     pickedFile\n      //   ]\n      //   setIsValid(true);\n    //   fileIsValid = true;\n    // } else {\n    //   setIsValid(false);\n    //   fileIsValid = false;\n    // }\n    // props.onInput(props.id, newImagesValue, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const removeImage = (imageRemoved) => {\n    const _images = [...images];\n    const filteredImages = _images.filter(image => image !== imageRemoved)\n    setImages(filteredImages)\n  }\n\n  const imagesList = images.map((image, id) => {\n    return <li \n    key={id} \n    onMouseEnter={() => setActiveImage(id)} onMouseLeave={() => setActiveImage(-1)}\n    >\n      <span \n      className={`${activeImage === parseInt(id) && 'active'}`} \n      onClick={() => removeImage(image)}\n      >\n        x\n      </span>\n      <Image \n      src={image ? image : userDummy} \n      alt='user-image' \n      size='medium-large' \n      className='center' \n      />\n    </li>\n  })\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={inputId}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n\n      <div className='image-upload'>\n\n        <div className=\"image-upload__preview\">\n          {/* {images.length > 0 && imageArea} */}\n          \n          {inputId === 'images' ? \n          images.length > 0 ? <ul className='images-upload__container'>{imagesList}</ul>\n             : <Image src={userDummy} alt='user-image' size='medium-large' className='center' />\n          :\n          <Image src={image ? image : userDummy} alt='user-image' size='medium-large' className='center' />\n          }\n          {inputId === 'images' ? !images.length > 0 && <p>Please pick an image.</p> : !image && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler} size=\"small\">\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n"],"names":["NewItem","formState","inputHandler","useForm","name","value","isValid","description","price","category","quantity","images","inputChange","e","id","target","replace","length","_jsxs","className","children","_jsx","htmlFor","onChange","type","ImageUpload","inputId","Button","disabled","DUMMY_PRODUCTS","maxQuantity","AVAILABLE_CATEGORIES","Store","products","setProducts","useState","searchName","setSearchName","searchPrice","setSearchPrice","searchCategory","setSearchCategory","searchAvailabilty","setSearchAvailabilty","modal","setModal","filtersVisible","setFiltersVisible","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","useEffect","handleResize","addEventListener","removeEventListener","productsList","map","product","src","dogBlank","alt","Link","to","_products","filterProducts","filteredProducts","filter","toUpperCase","includes","parseInt","checked","filtersVisibilityHandler","prevState","_Fragment","Modal","show","onCancel","hideModal","header","concat","onClick","placeholder","charAt","slice","step","formReducer","state","action","formIsValid","inputs","initialInputs","initialFormValidity","dispatch","useReducer","useCallback","_ref","size","errorText","file","setFile","imagesValue","setImagesValue","imageValue","setImageValue","setImages","image","setImage","setIsValid","activeImage","setActiveImage","filePickerRef","useRef","imagesList","onMouseEnter","onMouseLeave","imageRemoved","filteredImages","removeImage","Image","userDummy","ref","style","display","accept","event","files","fileReader","FileReader","onload","result","prevImages","readAsDataURL","pickImageHandler","current","click","props","ReactDOM","document","getElementById","ModalOverlay","content","headerClass","contentClass","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames"],"sourceRoot":""}