{"version":3,"file":"static/js/819.7af78eca.chunk.js","mappings":"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","sources":["components/Breeds/SingleBreed.js","shared/Button.js","shared/Card.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Card from '../../shared/Card'\r\nimport dogBlank from '../../images/blank_dog.png'\r\nimport Button from '../../shared/Button'\r\n\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nconst DUMMY_BREED = {\r\n    weight: {\r\n      imperial: \"6 - 13\",\r\n      metric: \"3 - 6\"\r\n    },\r\n    height: {\r\n      imperial: \"9 - 11.5\",\r\n      metric: \"23 - 29\"\r\n    },\r\n    id: 1,\r\n    name: \"Affenpinscher\",\r\n    bred_for: \"Small rodent hunting, lapdog\",\r\n    breed_group: \"Toy\",\r\n    life_span: \"10 - 12 years\",\r\n    temperament: \"Stubborn, Curious, Playful, Adventurous, Active, Fun-loving\",\r\n    origin: \"Germany, France\",\r\n    reference_image_id: \"BJa4kxc4X\"\r\n  }\r\n\r\n  const url = 'https://api.thedogapi.com/v1/images/'\r\n  const DUMMY_REFERENCE_ID = 'HyWGexcVQ'\r\n\r\nconst SingleBreed = () => {\r\n\r\n    const [breed, setBreed] = useState(false)\r\n    const [breedImage, setBreedImage] = useState(false)\r\n\r\n    let params = useParams()\r\n    let navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            try {\r\n              const response = await fetch(`${url}${params.bid}`);\r\n              if (!response.ok) {\r\n                throw new Error(`Response status: ${response.status}`);\r\n              }\r\n          \r\n              const json = await response.json();\r\n              if (json && json.breeds.length > 0) {\r\n                  setBreed(json.breeds[0]);\r\n                }\r\n              if (json && json.url) {\r\n                setBreedImage(json.url);\r\n                }\r\n            } catch (error) {\r\n              console.error(error.message);\r\n            }\r\n          }\r\n          getData()\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <div className='single-breed'>\r\n        <Card>\r\n            {breed && \r\n            <div className='flex-container single-breed__container'>\r\n                <div className='single-breed-image__container'>\r\n                <div className='single-breed-image'>\r\n                    {breedImage ? \r\n                    <img src={breedImage} alt={`${breed.name}-image`} />\r\n                : <img src={dogBlank} alt='dummy-image' />}\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='single-breed-info__container'>\r\n                <div className='single-breed-info-title'>\r\n                    <h1>{breed.name}</h1>\r\n                </div>\r\n                <div className='single-breed-info-description'>\r\n                    <div className='single-breed-info-group'>\r\n                        <span>Group: </span>{breed.breed_group ? breed.breed_group : 'no data'}\r\n                    </div>\r\n                    <div className='single-breed-info-origin'>\r\n                        <span>Origin: </span>{breed.origin ? breed.origin : 'no data'}\r\n                    </div>\r\n                    <div className='single-breed-info-weight'>\r\n                        <span>Weight: </span>{breed.weight.metric ? `${breed.weight.metric} kg` : 'no data'} \r\n                    </div>\r\n                    <div className='single-breed-info-height'>\r\n                        <span>Height: </span>{breed.height.metric ? `${breed.height.metric} cm` : 'no data'} cm\r\n                    </div>\r\n                    <div className='single-breed-info-life'>\r\n                        <span>Life span: </span>{breed.life_span ? breed.life_span : 'no data'}\r\n                    </div>\r\n                    <div className='single-breed-info-for'>\r\n                        <span>Description: </span>{breed.bred_for ? breed.bred_for : 'no data'}\r\n                    </div>\r\n                    <div className='single-breed-info-temperament'>\r\n                        <span>Temperament: </span>{breed.temperament ? breed.temperament : 'no data'}\r\n                    </div>\r\n                    <div className='single-breed-button'>\r\n                        <Button onClick={() => {navigate(-1)}}>BACK TO LIST</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            </div>\r\n            }\r\n        </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleBreed","import React from 'react'\r\n\r\nconst Button = ({children, className, onClick, size, disabled}) => {\r\n  return (\r\n    <div className={`button ${className} ${size && 'button-' + size} ${disabled && 'disabled'}`} onClick={onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst Card = ({children}) => {\r\n  return (\r\n    <div className='card'>\r\n        {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card"],"names":["SingleBreed","breed","setBreed","useState","breedImage","setBreedImage","params","useParams","navigate","useNavigate","useEffect","async","response","fetch","concat","bid","ok","Error","status","json","breeds","length","url","error","console","message","getData","_jsx","className","children","Card","_jsxs","src","alt","name","dogBlank","breed_group","origin","weight","metric","height","life_span","bred_for","temperament","Button","onClick","_ref","size","disabled"],"sourceRoot":""}