{"version":3,"file":"static/js/412.116041eb.chunk.js","mappings":"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","sources":["components/Admin/AdminList.js","components/Admin/Admin.js","components/Auth/NewUser.js","components/Gallery/NewImage.js","components/Store/NewItem.js","hooks/form-hook.js","hooks/http-hook.js","shared/Button.js","shared/Image.js","shared/ImageUpload.js","shared/Menu.js","shared/Backdrop.js","shared/Modal.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport dogBlank from '../../images/blank_dog.png'\r\nimport Image from '../../shared/Image'\r\n\r\nconst AdminList = ({ elements, removeElement, activeIndex }) => {\r\n\r\n    const elementList = elements.map((element, id) => {\r\n        let image = dogBlank\r\n        if(activeIndex === 2 && element.image) {\r\n            image = element.image\r\n        } else if (activeIndex !== 2 && element.images && element.images.length > 0) {\r\n            image = element.images[0]\r\n        }\r\n        return <li key={id} className={`element ${id % 2 === 0 ? 'even' : 'odd'}`}>\r\n            <Image src={image} alt={`${element.name}-image`} className='element-image' />\r\n            <div className='element-name'>{element.name}</div>\r\n            <div className='element-delete' onClick={() => removeElement(element.id)}>x</div>\r\n        </li>\r\n    })\r\n\r\n  return (\r\n    <ul className='admin-list'>\r\n        {elements.length > 0 ? elementList : <h2>Empty</h2>}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default AdminList;","import React, { useEffect, useState } from 'react'\r\nimport { ADMIN_MENU } from '../../shared/Menu'\r\nimport AdminList from './AdminList'\r\nimport dogBlank from '../../images/blank_dog.png'\r\nimport dogTest from '../../images/dog_0.jpg'\r\nimport Button from '../../shared/Button'\r\nimport Modal from '../../shared/Modal'\r\nimport NewUser from '../Auth/NewUser'\r\nimport NewImage from '../Gallery/NewImage'\r\nimport NewItem from '../Store/NewItem'\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\n\r\nconst DUMMY_PRODUCTS = [\r\n    {\r\n        id: 0,\r\n        name: 'Karma dla psa',\r\n        description: 'Duis ac massa porttitor, egestas libero non, tincidunt libero. Aliquam at elementum neque. Sed risus tellus, tincidunt ac enim quis, malesuada commodo purus. Nam tincidunt laoreet erat, sed maximus lacus imperdiet a. Sed ultricies auctor velit, a pharetra nulla ultricies eget.',\r\n        price: 10,\r\n        quantity: 0,\r\n        maxQuantity: 0,\r\n        images: [],\r\n        category: 'food'\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Figurka Jamnika',\r\n        description: 'Duis ac massa porttitor, egestas libero non, tincidunt libero. Aliquam at elementum neque. Sed risus tellus, tincidunt ac enim quis, malesuada commodo purus. Nam tincidunt laoreet erat, sed maximus lacus imperdiet a. Sed ultricies auctor velit, a pharetra nulla ultricies eget.',\r\n        price: 20,\r\n        quantity: 0,\r\n        maxQuantity: 3,\r\n        images: [],\r\n        category: 'other'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Figurka Charta',\r\n        description: 'Duis ac massa porttitor, egestas libero non, tincidunt libero. Aliquam at elementum neque. Sed risus tellus, tincidunt ac enim quis, malesuada commodo purus. Nam tincidunt laoreet erat, sed maximus lacus imperdiet a. Sed ultricies auctor velit, a pharetra nulla ultricies eget.',\r\n        price: 40,\r\n        quantity: 0,\r\n        maxQuantity: 2,\r\n        images: [],\r\n        category: 'other'\r\n    },\r\n]\r\n\r\nconst DUMMY_DOGS = [\r\n    {\r\n        id: 0,\r\n        name: 'Bodzio',\r\n        breed: 'chart',\r\n        likeIDs: ['123456', '123457', '123458'],\r\n        likes: 3,\r\n        commentIDs: ['123456', '123457'],\r\n        comments: 0,\r\n        images: [dogBlank, dogTest, dogBlank],\r\n        activeImageIndex: 0,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Bruno',\r\n        breed: 'bulldog',\r\n        likeIDs: [],\r\n        likes: 0,\r\n        commentIDs: ['123456', '123457', '123458'],\r\n        comments: 3,\r\n        images: [dogTest],\r\n        activeImageIndex: 0,\r\n    },\r\n]\r\n\r\nconst DUMMY_USERS = [\r\n    {\r\n        id: 0,\r\n        name: 'Iwan',\r\n        email: 'iwan@wp.pl',\r\n        image: dogTest,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Piotr',\r\n        email: 'piotr@wp.pl',\r\n        image: dogBlank,\r\n    },\r\n]\r\n\r\n\r\nconst Admin = () => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const [elements, setElements] = useState(false)\r\n    const [modal, setModal] = useState(false);\r\n    const [url, setUrl] = useState('store');\r\n    const [fetchTrigger, setFetchTrigger] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n        try {\r\n            const responseData = await sendRequest(\r\n                `http://localhost:5000/api/${url}`\r\n                // `${process.env.REACT_APP_BACKEND_URL}/items/${params.iid}`\r\n            );\r\n            setElements(responseData.data)\r\n        } catch (err) {\r\n            console.log(err)\r\n         }\r\n        };\r\n        fetchData();\r\n    }, [fetchTrigger])\r\n\r\n    const submitHandler = async (e, formState) => {\r\n        e.preventDefault();\r\n        let obj\r\n        if(activeIndex === 0) {\r\n            console.log(formState.inputs)\r\n            obj = {\r\n                name: formState.inputs.name.value,\r\n                price: parseFloat(formState.inputs.price.value),\r\n                category: formState.inputs.category.value,\r\n                quantity: parseFloat(formState.inputs.quantity.value),\r\n                description: formState.inputs.description.value,\r\n                // images: formState.inputs.images.value,\r\n            }\r\n        } else if(activeIndex === 1) {\r\n            obj = {\r\n                name: formState.inputs.name.value,\r\n                breed: formState.inputs.breed.value,\r\n            }\r\n        } else if(activeIndex === 2) {\r\n            obj = {\r\n                name: formState.inputs.name.value,\r\n                surname: formState.inputs.surname.value,\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value,\r\n                image: formState.inputs.image.value,\r\n            }\r\n        }\r\n        try {\r\n          const formData = new FormData();\r\n            // const im = formState.inputs.images.value\r\n            // im.forEach(\r\n            //   i => formData.append('images', i)\r\n            // )\r\n            // formData.append('name', formState.inputs.name.value);\r\n            // formData.append('surname', formState.inputs.surname.value);\r\n            // formData.append('email', formState.inputs.email.value);\r\n            // formData.append('password', formState.inputs.password.value);\r\n            // formData.append('image', formState.inputs.image.value);\r\n    \r\n          let request = `http://localhost:5000/api/${url}`;\r\n          if (activeIndex === 2) {\r\n              request = `http://localhost:5000/api/${url}/signup`;\r\n          }\r\n          // let request = `${process.env.REACT_APP_BACKEND_URL}/${props.request}`;\r\n            await sendRequest(request, 'POST',\r\n              // formData,\r\n              JSON.stringify(obj),\r\n              {\r\n                'Content-Type': 'application/json',\r\n                // Authorization: 'Bearer ' + auth.token\r\n              }\r\n            );\r\n          // history.push('/');\r\n          setFetchTrigger(prevFetchTrigger => !prevFetchTrigger)\r\n          hideModal()\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n\r\n    const deleteHandler = async (id) => {\r\n        try {\r\n          await sendRequest(\r\n            `http://localhost:5000/api/${url}/${id}`,\r\n            // `${process.env.REACT_APP_BACKEND_URL}/${request}/${id}`,\r\n            'DELETE',\r\n            null,\r\n            {\r\n                'Content-Type': 'application/json',\r\n            //   Authorization: 'Bearer ' + auth.token\r\n            }\r\n        );\r\n        setFetchTrigger(prevFetchTrigger => !prevFetchTrigger)\r\n    } catch (err) { \r\n        console.log(err)\r\n    }\r\n    };\r\n\r\n    const hideModal = () => {\r\n        setModal(false)\r\n    }\r\n    \r\n      const showModal = () => {\r\n        setModal(true)\r\n    }\r\n\r\n    \r\n    // const removeElement = (id) => {\r\n    //     const _elements = [...elements]\r\n    //     const filteredElements = _elements.filter(element => element.id !== id)\r\n    //     setElements(filteredElements)\r\n    // }\r\n    \r\n    const menuList = ADMIN_MENU.map((element, id) => {\r\n        return <li key={id} id={id} className='admin-menu-list-element'\r\n        onClick={() => {\r\n            setActiveIndex(id)\r\n            setFetchTrigger(prevFetchTrigger => !prevFetchTrigger)\r\n            setUrl(element.toLowerCase())\r\n        }}\r\n        >\r\n            {element}\r\n        </li>\r\n    })\r\n\r\n  return (\r\n    <>\r\n    <Modal\r\n        show={modal}\r\n        onCancel={hideModal}\r\n        header={activeIndex === 0 ? 'New Item' : activeIndex === 1 ? 'New Dog' : 'New User'}\r\n        children={\r\n            activeIndex === 0 ? <NewItem submitHandler={submitHandler} />\r\n            : activeIndex === 1 ? <NewImage submitHandler={submitHandler} /> : <NewUser isAdmin={true} submitHandler={submitHandler} />\r\n        }\r\n      ></Modal>\r\n    <div className='admin flex-container'>\r\n        <div className='admin-left'>\r\n            <ul className='admin-menu-list'>\r\n                {ADMIN_MENU && menuList}\r\n            </ul>\r\n        </div>\r\n        <div className='admin-right'>\r\n            <div className='admin-right-button'>\r\n                <Button className='button-success' onClick={showModal}>ADD NEW</Button>\r\n            </div>\r\n            <h1>{activeIndex === 0 ? 'STORE' : activeIndex === 1 ? 'GALLERY' : 'USERS'}</h1>\r\n            {elements && <AdminList elements={elements} removeElement={deleteHandler} activeIndex={activeIndex} />}\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Admin","import React from 'react'\r\nimport Button from '../../shared/Button'\r\nimport ImageUpload from '../../shared/ImageUpload'\r\nimport { useForm } from '../../hooks/form-hook'\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\n\r\nconst NewUser = ({ switchAuthForm, isAdmin, submitHandler }) => {\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      name: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      surname: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const inputChange = (e) => {\r\n    const id = e.target.id\r\n    const value = e.target.value\r\n    let isValid = true\r\n    if(!e.target.value.replace(/\\s/g, '') || e.target.value.length <= 0) {\r\n      isValid = false\r\n    }\r\n    inputHandler(id, value, isValid)\r\n  }\r\n\r\n  return (\r\n    <form className='modal-form'>\r\n        <div className='modal-form-name'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input id='name' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-surname'>\r\n          <label htmlFor='surname'>Surname</label>\r\n          <input id='surname' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-email'>\r\n          <label htmlFor='email'>Email</label>\r\n          <input id='email' type='email' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-password'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input id='password' type='password' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-image'>\r\n          <label htmlFor='image'>Avatar</label>\r\n          <ImageUpload inputId='image' onChange={inputHandler} />\r\n        </div>\r\n        <div className='modal-form-button'>\r\n          <Button onClick={(e) => submitHandler(e, formState)} disabled={!formState.isValid}>{isAdmin ? 'ADD NEW' : 'REGISTER'}</Button>\r\n        </div>\r\n        {!isAdmin &&\r\n            <p>Do you have account? Go to <span onClick={switchAuthForm}>login</span></p>\r\n        }\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NewUser;","import React from 'react'\r\nimport Button from '../../shared/Button'\r\nimport ImageUpload from '../../shared/ImageUpload'\r\nimport { useForm } from '../../hooks/form-hook'\r\n\r\nconst NewImage = ({submitHandler}) => {\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      name: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      breed: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      images: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const inputChange = (e) => {\r\n    const id = e.target.id\r\n    const value = e.target.value\r\n    let isValid = true\r\n    if(!e.target.value.replace(/\\s/g, '') || e.target.value.length <= 0) {\r\n      isValid = false\r\n    }\r\n    inputHandler(id, value, isValid)\r\n  }\r\n\r\n  return (\r\n    <form className='modal-form'>\r\n        <div className='modal-form-name'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input id='name' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-breed'>\r\n          <label htmlFor='breed'>Breed</label>\r\n          <input id='breed' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-images'>\r\n          <label htmlFor='images'>Images</label>\r\n          <ImageUpload inputId='images' onChange={inputHandler} />\r\n        </div>\r\n        <div className='modal-form-button'>\r\n          <Button onClick={(e) => submitHandler(e, formState)} disabled={!formState.isValid}>ADD NEW</Button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NewImage;","import React from 'react'\r\nimport Button from '../../shared/Button'\r\nimport ImageUpload from '../../shared/ImageUpload'\r\nimport { useForm } from '../../hooks/form-hook'\r\n\r\nconst NewItem = ({submitHandler}) => {\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      name: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      price: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      category: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      quantity: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      images: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const inputChange = (e) => {\r\n    const id = e.target.id\r\n    const value = e.target.value\r\n    let isValid = true\r\n    if(!e.target.value.replace(/\\s/g, '') || e.target.value.length <= 0) {\r\n      isValid = false\r\n    }\r\n    inputHandler(id, value, isValid)\r\n  }\r\n\r\n  return (\r\n    <form className='modal-form'>\r\n        <div className='modal-form-name'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input id='name' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-price'>\r\n          <label htmlFor='price'>Price</label>\r\n          <input id='price' type='number' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-category'>\r\n          <label htmlFor='category'>Category</label>\r\n          <input id='category' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-quantity'>\r\n          <label htmlFor='quantity'>Quantity</label>\r\n          <input id='quantity' type='number' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-description'>\r\n          <label htmlFor='description'>Description</label>\r\n          <textarea id='description' onChange={inputChange} />\r\n        </div>\r\n        <div className='modal-form-images'>\r\n          <label htmlFor='images'>Images</label>\r\n          <ImageUpload inputId='images' onChange={inputHandler} />\r\n        </div>\r\n        <div className='modal-form-button'>\r\n          <Button onClick={(e) => submitHandler(e, formState)} disabled={!formState.isValid}>ADD NEW</Button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NewItem;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n        \n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  // const setFormData = useCallback((inputData, formValidity) => {\n  //   dispatch({\n  //     type: 'SET_DATA',\n  //     inputs: inputData,\n  //     formIsValid: formValidity\n  //   });\n  // }, []);\n\n  return [formState, inputHandler];\n  // return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react'\r\n\r\nconst Button = ({children, className, onClick, size, disabled}) => {\r\n  return (\r\n    <div className={`button ${className} ${size && 'button-' + size} ${disabled && 'disabled'}`} onClick={onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst Image = ({ src, alt, className, size, onClick }) => {\r\n  return (\r\n    <div className={`image ${className} image-${size}`} onClick={onClick ? onClick : null}>\r\n        <img src={src} alt={alt} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image","import Button from './Button';\n\nimport React, { useRef, useState, useEffect } from 'react';\n\nimport userDummy from '../images/dummy_user_image.png'\nimport Image from './Image';\n\nconst ImageUpload = ({ inputId, onChange, errorText }) => {\n  const [file, setFile] = useState(false);\n  const [imagesValue, setImagesValue] = useState([]);\n  const [imageValue, setImageValue] = useState();\n  const [images, setImages] = useState([]);\n  const [image, setImage] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [activeImage, setActiveImage] = useState(-1);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if(images.length <= 0) return onChange(inputId, '', false);\n    onChange(inputId, images, true)\n  }, [images]);\n\n  const pickedHandler = event => {\n    // let pickedFile;\n    // let newImagesValue\n    // let fileIsValid = isValid;\n    // setImagesValue([\n    //   ...imagesValue,\n    //   event.target.files[0]\n    // ]);\n    if(event.target.files && event.target.files.length === 1) {\n      const file = event.target.files[0]\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const result = fileReader.result\n        if(inputId === 'images') {\n          setImages(prevImages => [\n            ...prevImages,\n            result\n          ]);\n\n        } else {\n          setImage(result);\n          onChange(inputId, result, true)\n        }\n      }\n      fileReader.readAsDataURL(file);\n      // fileReader.readAsDataURL(file);\n      // setImageValue(event.target.files[0])\n      // setIsValid(true)\n    }\n\n    // if (event.target.files && event.target.files.length === 1) {\n    //   pickedFile = event.target.files[0];\n    //   setFile(pickedFile);\n    //   newImagesValue = [\n      //     ...imagesValue,\n      //     pickedFile\n      //   ]\n      //   setIsValid(true);\n    //   fileIsValid = true;\n    // } else {\n    //   setIsValid(false);\n    //   fileIsValid = false;\n    // }\n    // props.onInput(props.id, newImagesValue, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const removeImage = (imageRemoved) => {\n    const _images = [...images];\n    const filteredImages = _images.filter(image => image !== imageRemoved)\n    setImages(filteredImages)\n  }\n\n  const imagesList = images.map((image, id) => {\n    return <li \n    key={id} \n    onMouseEnter={() => setActiveImage(id)} onMouseLeave={() => setActiveImage(-1)}\n    >\n      <span \n      className={`${activeImage === parseInt(id) && 'active'}`} \n      onClick={() => removeImage(image)}\n      >\n        x\n      </span>\n      <Image \n      src={image ? image : userDummy} \n      alt='user-image' \n      size='medium-large' \n      className='center' \n      />\n    </li>\n  })\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={inputId}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n\n      <div className='image-upload'>\n\n        <div className=\"image-upload__preview\">\n          {/* {images.length > 0 && imageArea} */}\n          \n          {inputId === 'images' ? \n          images.length > 0 ? <ul className='images-upload__container'>{imagesList}</ul>\n             : <Image src={userDummy} alt='user-image' size='medium-large' className='center' />\n          :\n          <Image src={image ? image : userDummy} alt='user-image' size='medium-large' className='center' />\n          }\n          {inputId === 'images' ? !images.length > 0 && <p>Please pick an image.</p> : !image && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler} size=\"small\">\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n\n","export const MENU = ['STORE', 'GALLERY', 'BREEDS', 'CART', 'LOGIN'];\r\nexport const ADMIN_MENU = ['STORE', 'GALLERY', 'USERS'];","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n"],"names":["_ref","elements","removeElement","activeIndex","elementList","map","element","id","image","dogBlank","images","length","_jsxs","className","concat","children","_jsx","Image","src","alt","name","onClick","Admin","setActiveIndex","useState","setElements","modal","setModal","url","setUrl","fetchTrigger","setFetchTrigger","isLoading","error","sendRequest","clearError","useHttpClient","useEffect","async","responseData","data","err","console","log","fetchData","submitHandler","e","formState","obj","preventDefault","inputs","value","price","parseFloat","category","quantity","description","breed","surname","email","password","FormData","request","JSON","stringify","prevFetchTrigger","hideModal","menuList","ADMIN_MENU","toLowerCase","_Fragment","Modal","show","onCancel","header","NewItem","NewImage","NewUser","isAdmin","Button","showModal","AdminList","switchAuthForm","inputHandler","useForm","isValid","inputChange","target","replace","htmlFor","onChange","type","ImageUpload","inputId","disabled","formReducer","state","action","formIsValid","initialInputs","initialFormValidity","dispatch","useReducer","useCallback","setIsLoading","setError","activeHttpRequests","useRef","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","size","errorText","file","setFile","imagesValue","setImagesValue","imageValue","setImageValue","setImages","setImage","setIsValid","activeImage","setActiveImage","filePickerRef","imagesList","onMouseEnter","onMouseLeave","parseInt","imageRemoved","filteredImages","removeImage","userDummy","ref","style","display","accept","event","files","fileReader","FileReader","onload","result","prevImages","readAsDataURL","pickImageHandler","click","MENU","props","ReactDOM","document","getElementById","ModalOverlay","content","headerClass","contentClass","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames"],"sourceRoot":""}